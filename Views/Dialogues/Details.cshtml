@model maibagamofisa.Models.Dialogue

@{
    ViewData["Title"] = "Details";
}

<h1 class="title">@Model.Title</h1>

<div class="content" id="dialogueContent">
    @Html.DisplayFor(model => model.Content)
</div>

@if (!string.IsNullOrEmpty(Model.Questions))
{
    var questions = Model.Questions.Split(';');
    <div class="questions" id="questions">
        @for (int i = 0; i < questions.Length; i++)
        {
            <div class="question @(i % 2 == 0 ? "left" : "right")" data-index="@i">
                @questions[i]
            </div>
        }
    </div>
}
else
{
    <p class="no-questions">No questions available.</p>
}

<div class="action-links">
    <button class="btn btn-primary" onclick="readNextLine()">Read Next Line</button>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

<style>
    body {
        font-family: Arial, sans-serif;
    }

    .title {
        font-size: 2.5em;
        text-align: center;
        margin-top: 20px;
        margin-bottom: 20px;
    }

    .content {
        text-align: center;
        font-size: 1.2em;
        margin-bottom: 40px;
    }

    .questions {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 15px;
    }

    .question {
        max-width: 60%;
        padding: 10px 20px;
        border-radius: 20px;
        font-size: 1em;
        color: white;
        word-wrap: break-word;
        background-color: #D3A3D3; /* Light purple color */
    }

        .question.left {
            align-self: flex-start;
        }

        .question.right {
            align-self: flex-end;
            background-color: #B890B8; /* Slightly darker purple for alternating lines */
        }

    .no-questions {
        text-align: center;
        color: #999;
        font-size: 1.1em;
    }

    .action-links {
        text-align: center;
        margin-top: 40px;
    }

        .action-links .btn {
            margin: 0 10px;
        }
</style>

<script>
    let currentLineIndex = 0;
    const lines = Array.from(document.querySelectorAll('.question'));

    function readNextLine() {
        if (currentLineIndex < lines.length) {
            const line = lines[currentLineIndex].innerText;
            speakLine(line);
            currentLineIndex++;
        } else {
            alert('End of dialogue.');
        }
    }

    function speakLine(line) {
        if ('speechSynthesis' in window) {
            const utterance = new SpeechSynthesisUtterance(line);
            utterance.lang = 'de-DE'; // Adjust the language code as needed
            window.speechSynthesis.speak(utterance);
        } else {
            alert('Speech Synthesis not supported in this browser.');
        }
    }
</script>
